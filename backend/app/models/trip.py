from beanie import Document
from pydantic import Field
from typing import List, Dict, Any, Optional
from datetime import datetime
from app.models.location import Location # Import the Location model

class TripLocation(Location):
    """Extends Location model for specific use within a Trip document."""
    # No additional fields needed here, just inherits from Location
    pass

class Trip(Document):
    """MongoDB Document for storing planned/saved trips."""
    user_id: str = Field(..., description="ID of the associated user.") # Reference to User._id
    destination: str = Field(..., description="City of the trip.")
    trip_date: datetime = Field(..., description="The date of the planned trip.")
    return_time: str = Field(..., description="Desired return time, e.g., '11 PM'.")
    preferences: Dict[str, Any] = Field(default_factory=dict, description="Snapshot of preferences used for this trip.")
    selected_locations: List[TripLocation] = Field(default_factory=list, description="The locations user selected for the trip.")
    itinerary: List[Dict[str, Any]] = Field(default_factory=list, description="Detailed, optimized itinerary generated by AI.")
    estimated_costs: Dict[str, Any] = Field(default_factory=dict, description="Breakdown of estimated costs.")
    weather_info: Dict[str, Any] = Field(default_factory=dict, description="Weather snapshot for the trip date.")
    travel_tips: List[str] = Field(default_factory=list, description="Practical travel tips for the trip.")
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)

    class Settings:
        name = "trips" # Collection name in MongoDB